name: Build and release

on: [push]

env:
  APP_NAME: volwatcher
  DEBIAN_PACKAGE_NAME: volwatcher-1.0.${{github.run_number}}_armhf
  APP_VERSION: 1.0.${{github.run_number}}
  RELEASE_VERSION: v1.0.${{github.run_number}}
  PACKAGE_PATH: github.com/danesparza/volwatcher

jobs:
  vulnerabilitycheck:
    name: Vulnerabilities scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.22.x'
          check-latest: true

      - name: Get scanner tool
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Scan for vulnerabilities
        run: govulncheck ./...

  test:
    name: Tests
    runs-on: ubuntu-latest
    container: golang:latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.x'

      - name: Get dependencies
        run: go mod download

      - name: Test
        run: go test -v ./...

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.x'

      - name: Get compiler tool
        run: go install github.com/mitchellh/gox@latest

      - name: Get dependencies
        run: go mod download

      - name: Create binaries for all platforms
        run: mkdir -p /tmp/binaries; gox -osarch="darwin/amd64 darwin/arm64" -ldflags "-X ${PACKAGE_PATH}/version.BuildNumber=${GITHUB_RUN_NUMBER} -X ${PACKAGE_PATH}/version.CommitID=${GITHUB_SHA} -X '${PACKAGE_PATH}/version.Prerelease=-'" -output "/tmp/binaries/${APP_NAME}_{{.OS}}_{{.Arch}}" $PACKAGE_PATH/...

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Release binaries
          path: /tmp/binaries



